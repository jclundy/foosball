#starting jupyter notebook
jupyter notebook notebook.ipynb

#ROS
roscore

#for subscribing to msgs from arduino
source ~/catkin_ws/devel/setup.bash
rosrun rosserial_python serial_node.py /dev/ttyACM0

rostopic echo linear_steps

rostopic echo wrist_steps

#for publishing wrist speed command
rostopic pub -1 wrist_speed std_msgs/Int16 -- <wrist_speed>

#for publishing linear speed command
rostopic pub -1 linear_speed std_msgs/Int16 -- <linear_speed>


#for using joystick

ls -l /dev/input/js0

# if not rw enabled
sudo chmod a+rw /dev/input/jsX
source ~/catkin_ws/devel/setup.bash
rosparam set joy_node/dev "/dev/input/jsX"

rosrun joy joy_node
rostopic echo joy

#running open loop controller
rosrun foos_control openLoop

#running startup calibration
rosrun foos_control startup

#kill roscore
killall -9 rosmaster

# ball tracking
# view webcams
ls -ltrh /dev/video*

#run ball tracker
python colorTracker.py

# camera driver
rosparam set cv_camera/device_id 2
rosrun cv_camera cv_camera_node

#view image
rosrun image_view image_view image:=cv_camera/image_raw

#run camera calibration
rosrun camera_calibration cameracalibrator.py --size 10x7 --square 0.021 image:=/cv_camera/image_raw camera:=/cv_camera

#use ros image_proc library
ROS_NAMESPACE=cv_camera rosrun image_proc image_proc

rosrun image_view image_view image:=cv_camera/image_rect_color

rosrun image_view image_saver image:=cv_camera/image_rect_color
rosrun image_view video_recorder image:=cv_camera/image_rect_color

